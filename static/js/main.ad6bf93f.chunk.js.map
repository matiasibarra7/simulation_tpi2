{"version":3,"sources":["App.js","index.js"],"names":["App","useState","daysSimulation","setDaysSimulation","arrayData","setArrayData","repositionMon","setRepositionMon","repositionThrSat","setRepositionThrSat","arrayReplicas","setArrayReplicas","intervaloDeConfianzaTpvp","setIntervaloDeConfianzaTpvp","intervaloDeConfianzaTcvp","setIntervaloDeConfianzaTcvp","intervaloDeConfianzaCtcp","setIntervaloDeConfianzaCtcp","intervaloDeConfianzaPv","setIntervaloDeConfianzaPv","dataResult","setDataResult","getDataSimulation","auxArray","d","vpl","vpj","vps","pl","pj","ps","pvl","pvj","pvs","cbp","ca","vpArray","vd","pv","cvp","vp","ctcp","tcvp","tpvp","st","dp","daysOfWeek","1","2","3","4","5","6","0","generateCA","day","base","promVP","length","i","Math","round","extra","generateVD","aux","random","t","includes","push","dataDay","className","type","value","onChange","e","target","min","Number","onClick","amount","arrayResults","console","log","getVariosResults","avgTpvp","avgTcvp","avgCtcp","avgPv","r","auxTpvp","auxTcvp","auxCtcp","auxPv","pow","s_tpvp","sqrt","s_tcvp","s_ctcp","s_pv","intervalo_tpvp","intervalo_tcvp","intervalo_ctcp","intervalo_pv","interInf1","interSup1","interInf2","interSup2","interInf3","interSup3","interInf4","interSup4","getIntervaloConfianza","toFixed","style","margin","map","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad6bf93f.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react'\n\nfunction App() {\n\n  // variables\n  const [daysSimulation, setDaysSimulation] = useState(7); // Cantidad de dias simulados\n  // const [vpArray, setVpArray] = useState([]); // Array con las ventas pérdidas\n  const [arrayData, setArrayData] = useState([])\n  const [repositionMon, setRepositionMon] = useState(40)\n  const [repositionThrSat, setRepositionThrSat] = useState(30)\n\n  const [arrayReplicas, setArrayReplicas] = useState([])\n  const [intervaloDeConfianzaTpvp, setIntervaloDeConfianzaTpvp] = useState([])\n  const [intervaloDeConfianzaTcvp, setIntervaloDeConfianzaTcvp] = useState([])\n  const [intervaloDeConfianzaCtcp, setIntervaloDeConfianzaCtcp] = useState([])\n  const [intervaloDeConfianzaPv, setIntervaloDeConfianzaPv] = useState([])\n\n\n  const [dataResult, setDataResult] = useState(null)\n\n  \n  function getDataSimulation() {\n    let auxArray = []\n    \n    // Inicialización de variables\n  \n    let d = 0 // día de la semana, va de 1 a 7\n  \n    let vpl = 3 // Venc. pan del lunes\n    let vpj = 7 // Venc. pan del jueves\n    let vps = 10 // Venc. pan del sábado\n  \n    let pl = 0 // pan del lunes\n    let pj = 0 // pan del jueves\n    let ps = 0 // pan del sábado\n  \n    let pvl = 0 // pan vendido desde el lunes\n    let pvj = 0 // pan vendido desde el jueves\n    let pvs = 0 // pan vendido desde el sábado\n  \n    let cbp = 0 // costo de búsqueda de pan\n    let ccp = 0 // costo de compra de pan\n  \n    const α1 = 650  // Gasto fijo por buscar pan (Gasoil)\n    const α2 = 68   // Costo de kg de pan\n    const α3 = 60   // Costo de pérdida de pan\n  \n    let ca = 0\n  \n    let vpArray = [] // Array con las ventas pérdidas\n  \n    let vd = 0 // Venta diaria\n    let pv = 0 // Pan vendido\n    let cvp = 0 // Costo de venta pérdida\n    let vp = 0 // Venta pérdida\n    \n  \n    let ctcp = 40 * α2 // Costo total de compra de pan\n    let tcvp = 0 // Total de costo de venta pérdido\n    let tpvp = 0 // Total KG pan de venta pérdido\n    \n  \n    let st = 40\n  \n    const dp = [1, 4, 6]\n  \n    const daysOfWeek = {\n      1: \"Lunes\",\n      2: \"Martes\",\n      3: \"Miércoles\",\n      4: \"Jueves\",\n      5: \"Viernes\",\n      6: \"Sábado\",\n      0: \"Domingo\"\n    }\n\n    function generateCA(day) {\n    \n      let promVP = 0\n      if (vpArray.length) {\n        for (let i = 0; i < vpArray.length; i++) {\n          promVP += vpArray[i]\n        }\n    \n        promVP = Math.round(promVP/vpArray.length)\n        // console.log(`El promedio de ventas perdidas es de ${promVP}`)\n      }\n  \n      let base\n      day === 1? base = repositionMon : base = repositionThrSat\n  \n      let extra = Math.round(promVP/2) - st\n      \n\n      if (base + extra > 0) {\n        return base + extra\n      } else {\n        return 0\n      }\n\n    }\n\n    function generateVD() {\n      let aux = Math.random()\n  \n      if (aux >= 0 && aux < 0.054) return 11\n      if (aux >= 0.054 && aux < 0.14) return 12\n      if (aux >= 0.14 && aux < 0.249) return 13\n      if (aux >= 0.249 && aux < 0.412) return 14\n      if (aux >= 0.412 && aux < 0.564) return 15\n      if (aux >= 0.564 && aux < 0.738) return 16\n      if (aux >= 0.738 && aux < 0.858) return 17\n      if (aux >= 0.858 && aux < 0.923) return 18\n      if (aux >= 0.923 && aux < 0.977) return 19\n      if (aux >= 0.977 && aux < 1) return 20\n    }\n\n\n\n    \n    // Paso 1 (T = T + 1)\n    for (let t = 1; t <= daysSimulation; t++) {\n      // console.log(`ESTE ES EL ARREGLO DE VENTAS PERDIDAS`, vpArray);\n\n      // Paso 2 (D = D + 1)\n      d++\n\n      // console.log(`Hoy es día ${t} ${daysOfWeek[d]}`)\n\n      // Paso 3 (Ver si es el día que vence alguna compra de pan)\n      switch (t) {\n        case vpl:\n          // console.log(\"Vencío tu pan del lunes\")\n          // Paso 3.1 -- Ver si el pan vendido desde el lunes es mayor o igual a la cantidad adquirida el lunes\n          if (!pvl >= pl) { \n            // Paso 3.1.1 -- Restar el pan vencido de la compra del lunes al stock actual\n            st = st - ( pl - pvl > 0? pl - pvl : 0 )\n          }\n        break;\n        case vpj:\n          // console.log(\"Vencío tu pan del jueves\")\n          // Paso 3.2 -- Ver si el pan vendido desde el jueves es mayor o igual a la cantidad adquirida el jueves\n          if (!pvj >= pj) { \n            // Paso 3.2.1 -- Restar el pan vencido de la compra del lunes al stock actual\n            st = st - (pj - pvj > 0? pj - pvj : 0)\n          }\n          \n        break;\n        case vps:\n          // console.log(\"Vencío tu pan del sábado\")\n          // Paso 3.3 -- Ver si el pan vendido desde el sábado es mayor o igual a la cantidad adquirida el sábado\n          if (!pvs >= ps) { \n            // Paso 3.3.1 -- Restar el pan vencido de la compra del sábado al stock actual\n            st = st - (ps - pvs > 0? ps - pvs : 0)\n          }\n        break;\n\n        default:\n        break;\n      }\n\n      // Paso 4 (DP includes D)\n      if (dp.includes(d)) {\n        // console.log(\"Hoy se compra paaaaaaaaaaan\")\n\n        // Paso 5 (Generar CA)\n        ca = generateCA(d)\n\n        // console.log(\"CA GENERADOOOOOOO\", ca);\n        if (ca > 0) {\n          // Paso x (Calcula el total de buscar el producto)\n          cbp = cbp + α1\n\n          // Paso x (Calcula el costo de la compra actual)\n          ccp = ca*α2\n\n          // Paso x (Acumulamos el costo total de compra de pan)\n          ctcp += ccp\n\n        }\n\n        // Paso 6 -- Ver que día de compra es\n        switch (d) {\n          // lunes\n          case 1:\n            // Paso 6.1.1\n            vpl = t + 3\n            // Paso 6.1.2\n            pl = ca\n            // Paso 6.1.3\n            pvl = 0\n            // Paso 6.1.4\n            st = st + pl\n\n          break;\n          // jueves\n          case 4:\n            // Paso 6.2.1\n            vpj = t + 3\n            // Paso 6.2.2\n            pj = ca\n            // Paso 6.2.3\n            pvj = 0\n            // Paso 6.2.4\n            st = st + pj\n            \n          break;\n          // sabado\n          case 6:\n            // Paso 6.3.1\n            vps = t + 3\n            // Paso 6.3.2\n            ps = ca\n            // Paso 6.3.3\n            pvs = 0\n            // Paso 6.3.4\n            st = st + ps\n\n          break;\n        \n          default:\n          break;\n        }\n\n\n      }\n\n\n\n\n      // Paso 9 (Generar la venta diaria)\n      vd = generateVD()\n      // console.log(`hoy se vendió ${vd} Kg de pan`);\n\n      // Paso 10 (Comprobar si la venta diaria es menor al stock)\n      if (vd <= st) {\n        // Paso 10.1.1 (Al stock le resto el pan vendido)\n        st -= vd\n\n        // Paso 10.1.2 (Al pan vendido le sumo la venta diaria)\n        pv += vd\n      } else {\n        // Paso 10.2.1 (guardamos el valor de la venta perdida en nuestro array)\n        vp = vd - st\n        \n        vpArray.push(vp)\n\n        // Paso 10.2.2 (Calcular el costo de venta pérdido)\n        cvp += vp * α3\n\n        // Paso 10.2.3 (Vendemos el pan que nos queda)\n        pv += st\n\n        // Paso 10.2.4 (Vaciamos el stock)\n        st = 0\n\n        // TOTAL DE VENTAS PERDIDAS EN KG\n        tpvp += vp\n\n        // Paso x (Acumulamos el total de costo de venta perdido)\n        tcvp += cvp\n      }\n\n      // // Paso 12 (Acumulamos el total de pan vendido)\n      // tpv += pv\n\n\n\n      // Paso 14 (Acumulamos la cantidad de pan vendido desde el lunes)\n      pvl += pv\n\n      // Paso 15 (Acumulamos la cantidad de pan vendido desde el jueves)\n      pvj += pv\n\n      // Paso 16 (Acumulamos la cantidad de pan vendido desde el sábado)\n      pvs += pv\n      \n      // Paso 17 (Reiniciar la semana si cabe)\n      if (d >= 7) {\n        d = 0\n      }\n\n      \n\n      \n      const dataDay = {\n        t: t,\n        day: daysOfWeek[d],\n        vd: vd,\n        vpl: vpl,\n        vpj: vpj,\n        vps: vps,\n        vpArray: vpArray,\n        ca: ca,\n        st: st,\n        pl: pl,\n        pj: pj,\n        ps: ps,\n      }\n\n      auxArray.push(dataDay)\n      \n      // console.log('--------------------------------')\n      // console.log('vpArray', vpArray)\n      // console.log('--------------------------------')\n\n    }\n\n\n    // Final step (Show results)\n    // console.log(`El costo total de compra de pan es: $${ctcp}`)\n    // console.log(`El total de pan vendido es: ${pv} Kg`)\n    // console.log(`El total de pan perdido es: ${tpvp} Kg`)\n    // console.log(`El costo total de venta pérdida es: $${tcvp}`)\n    // console.log(`El costo de búsqueda total: $${cbp}`)\n\n    const dataResult = {\n      ctcp: ctcp,\n      pv: pv,\n      tpvp: tpvp,\n      tcvp: tcvp,\n      cbp: cbp,\n    }\n    setDataResult(dataResult)\n\n    setArrayData(auxArray)\n\n    return dataResult\n  }\n\n\n\n  function getVariosResults(amount = 50000) {\n    let arrayResults = []\n    for (let i = 0; i < amount; i++) {\n      arrayResults.push(getDataSimulation())\n    }\n    setArrayReplicas(arrayResults)\n\n    console.log(arrayResults)\n  }\n  \n  function getIntervaloConfianza() {\n    // promedio de replicas\n    let avgTpvp = 0\n    let avgTcvp = 0\n    let avgCtcp = 0\n    let avgPv = 0\n    let r = arrayReplicas.length\n\n    for (let i = 0; i < r; i++) {\n      avgTpvp += arrayReplicas[i].tpvp\n      avgTcvp += arrayReplicas[i].tcvp\n      avgCtcp += arrayReplicas[i].ctcp\n      avgPv += arrayReplicas[i].pv\n    }\n\n    avgTpvp = avgTpvp / r\n    avgTcvp = avgTcvp / r\n    avgCtcp = avgCtcp / r\n    avgPv = avgPv / r\n\n\n    // calculando (x - avr(x))^2\n    let auxTpvp = 0\n    let auxTcvp = 0\n    let auxCtcp = 0\n    let auxPv = 0\n    for (let i = 0; i < r; i++) {\n      auxTpvp += Math.pow(arrayReplicas[i].tpvp - avgTpvp, 2)\n      auxTcvp += Math.pow(arrayReplicas[i].tcvp - avgTcvp, 2)\n      auxCtcp += Math.pow(arrayReplicas[i].ctcp - avgCtcp, 2)\n      auxPv += Math.pow(arrayReplicas[i].pv - avgPv, 2)\n    }\n\n\n    // desviación \n    let s_tpvp = Math.sqrt((1 / (r - 1)) * auxTpvp)\n    let s_tcvp = Math.sqrt((1 / (r - 1)) * auxTcvp)\n    let s_ctcp = Math.sqrt((1 / (r - 1)) * auxCtcp)\n    let s_pv = Math.sqrt((1 / (r - 1)) * auxPv)\n\n    let intervalo_tpvp = []\n    let intervalo_tcvp = []\n    let intervalo_ctcp = []\n    let intervalo_pv = []\n\n    let interInf1 = avgTpvp - (s_tpvp / Math.sqrt(r * 0.05))\n    let interSup1 = avgTpvp + (s_tpvp / Math.sqrt(r * 0.05))\n\n    let interInf2 = avgTcvp - (s_tcvp / Math.sqrt(r * 0.05))\n    let interSup2 = avgTcvp + (s_tcvp / Math.sqrt(r * 0.05))\n\n    let interInf3 = avgCtcp - (s_ctcp / Math.sqrt(r * 0.05))\n    let interSup3 = avgCtcp + (s_ctcp / Math.sqrt(r * 0.05))\n\n    let interInf4 = avgPv - (s_pv / Math.sqrt(r * 0.05))\n    let interSup4 = avgPv + (s_pv / Math.sqrt(r * 0.05))  \n\n\n\n    intervalo_tpvp.push(interInf1)\n    intervalo_tpvp.push(interSup1)\n\n    intervalo_tcvp.push(interInf2)\n    intervalo_tcvp.push(interSup2)\n\n    intervalo_ctcp.push(interInf3)\n    intervalo_ctcp.push(interSup3)\n\n    intervalo_pv.push(interInf4)\n    intervalo_pv.push(interSup4)\n\n    setIntervaloDeConfianzaTpvp(intervalo_tpvp)\n    setIntervaloDeConfianzaTcvp(intervalo_tcvp)\n    setIntervaloDeConfianzaCtcp(intervalo_ctcp)\n    setIntervaloDeConfianzaPv(intervalo_pv)\n\n    console.log(intervalo_tpvp)\n    console.log(intervalo_tcvp)\n    console.log(intervalo_ctcp)\n    console.log(intervalo_pv)\n  }\n\n\n\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"mt-5\">TPI2 - Simulación</h1>\n      \n      <div className=\"row d-flex justify-content-center\">\n        <h4>Datos de entrada</h4>\n\n        <div className=\"col-4\">\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">Días de la simulación</span>\n            <input type=\"number\" className=\"form-control\" value={daysSimulation} onChange={(e) => setDaysSimulation(e.target.value)} min=\"1\" />\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"row d-flex justify-content-center mt-4\">\n\n        <div className=\"col-4\">\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">Pan a reponer los Lunes</span>\n            <input type=\"number\" className=\"form-control\" onChange={(e) => setRepositionMon(Number(e.target.value))} value={repositionMon} />\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"input-group\">\n            <span className=\"input-group-text\">Pan a reponer los Jueves y Sábados</span>\n            <input type=\"number\" className=\"form-control\" onChange={(e) => setRepositionThrSat(Number(e.target.value))} value={repositionThrSat} />\n          </div>\n        </div>\n\n      </div>\n\n\n      <div className=\"d-flex p-2 justify-content-center mb-3 mt-3\">\n        <input type=\"button\" className=\"btn btn-primary mx-2\" value=\"Realizar una corrida\" onClick={ getDataSimulation } />\n        <input type=\"button\" className=\"btn btn-primary mx-2\" value=\"Realizar replicas\" onClick={ () => getVariosResults() } />\n      </div>\n\n    \n\n      {arrayReplicas.length?\n        <div className=\"container ic-container\" >\n          <h4 className=\"mt-2\">Intervalos de confianza</h4>\n          <input type=\"button\" className=\"btn btn-success m-2\" value=\"Obtener intervalos de confianza\" onClick={ () => getIntervaloConfianza() } />\n\n          {intervaloDeConfianzaTpvp.length?\n            <>\n              <div className=\"p-2\">\n                <span className=\"alpha-aclaration\">Alpha utilizado: 0.05</span>\n                \n                <div className=\"m-2\">\n                  <div><b>TPVP (Kg):</b></div>\n                  <div>{ `IC: [${(intervaloDeConfianzaTpvp[0]).toFixed(4)} - ${(intervaloDeConfianzaTpvp[1]).toFixed(4)}]` }</div>\n                  <div>{ `Media: ${((intervaloDeConfianzaTpvp[1] + intervaloDeConfianzaTpvp[0]) / 2).toFixed(4)}` }</div>\n                  <div>{ `Amplitud del IC: ${(intervaloDeConfianzaTpvp[1] - intervaloDeConfianzaTpvp[0]).toFixed(4)}` }</div>\n                </div>\n                <div className=\"m-2\">\n                  <div><b>PV (Kg):</b></div>\n                  <div>{ `IC: [${(intervaloDeConfianzaPv[0]).toFixed(4)} - ${(intervaloDeConfianzaPv[1]).toFixed(4)}]`}</div>\n                  <div>{ `Media: ${((intervaloDeConfianzaPv[1] + intervaloDeConfianzaPv[0]) / 2 ).toFixed(4)}` }</div>\n                  <div>{ `Amplitud del IC: ${(intervaloDeConfianzaPv[1] - intervaloDeConfianzaPv[0]).toFixed(4)}` }</div>\n                </div>\n                <div className=\"m-2\">\n                  <div><b>TCVP ($):</b></div>\n                  <div>{ `IC: [${(intervaloDeConfianzaTcvp[0]).toFixed(4)} - ${(intervaloDeConfianzaTcvp[1]).toFixed(4)}]`}</div>\n                  <div>{ `Media: ${((intervaloDeConfianzaTcvp[1] + intervaloDeConfianzaTcvp[0]) / 2 ).toFixed(4)}` }</div>\n                  <div>{ `Amplitud del IC: ${(intervaloDeConfianzaTcvp[1] - intervaloDeConfianzaTcvp[0]).toFixed(4)}` }</div>\n                </div>\n                <div className=\"m-2\">\n                  <div><b>CTCP ($):</b></div>\n                  <div>{ `IC: [${(intervaloDeConfianzaCtcp[0]).toFixed(4)} - ${(intervaloDeConfianzaCtcp[1]).toFixed(4)}]`}</div>\n                  <div>{ `Media: ${((intervaloDeConfianzaCtcp[1] + intervaloDeConfianzaCtcp[0]) / 2 ).toFixed(4)}` }</div>\n                  <div>{ `Amplitud del IC: ${(intervaloDeConfianzaCtcp[1] - intervaloDeConfianzaCtcp[0]).toFixed(4)}` }</div>\n                </div>\n\n              </div>\n            </>\n            :\n            <></>\n          }\n        </div>\n        :\n        <></>\n      }\n      <div className=\"mt-4\">\n\n        \n\n\n      </div>\n\n        {dataResult? \n          <div className=\"result-container\">\n            <div>\n              <h4>Resultados de la última réplica</h4>\n              <div>El costo total de compra de pan: {dataResult.ctcp}</div>\n              <div>Total de pan vendido: {dataResult.pv}</div>\n              <div>Total de pan perdido: {dataResult.tpvp}</div>\n              <div>Costo total de venta pérdida: {dataResult.tcvp}</div>\n              <div>Costo de búsqueda total : {dataResult.cbp}</div>\n            </div>\n\n\n            <table style={{ margin:\"1rem auto\" }}>\n              <thead>\n                <tr>\n                  <th>Día nro</th>\n                  <th>Día de la semana</th>\n                  <th>Venta Diaria</th>\n                  <th>Pan Lunes</th>\n                  <th>Vto. pan Lunes</th>\n                  <th>Pan Jueves</th>\n                  <th>Vto. pan Jueves</th>\n                  <th>Pan Sábado</th>\n                  <th>Vto. pan Sábado</th>\n                  <th>Stock/Final día</th>\n                  <th>Pan comprado hoy</th>\n                </tr>\n              </thead>\n              <tbody>\n                { arrayData.length?\n                  \n                  arrayData.map((el,i) => {\n                    return <tr key={i}>\n                            <td>{el.t}</td>\n                            <td>{el.day}</td>\n                            <td>{el.vd}</td>\n                            <td>{el.pl}</td>\n                            <td>{el.vpl}</td>\n                            <td>{el.pj}</td>\n                            <td>{el.vpj}</td>\n                            <td>{el.ps}</td>\n                            <td>{el.vps}</td>\n                            <td>{el.st}</td>\n                            <td>{el.ca}</td>\n                          </tr>\n                  })\n                  : \n                  <></>\n                }\n              </tbody>\n            </table>\n          </div>\n          :\n          <></>\n        }\n      \n\n        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}