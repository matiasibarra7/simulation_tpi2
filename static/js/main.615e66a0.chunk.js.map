{"version":3,"sources":["App.js","index.js"],"names":["App","useState","daysSimulation","setDaysSimulation","arrayData","setArrayData","repositionMon","setRepositionMon","repositionThrSat","setRepositionThrSat","dataResult","setDataResult","auxArray","d","vpl","vpj","vps","pl","pj","ps","pvl","pvj","pvs","cbp","ca","vpArray","vd","pv","cvp","vp","ctcp","tcvp","tpvp","st","dp","daysOfWeek","1","2","3","4","5","6","0","className","type","value","onChange","e","target","min","onClick","generateCA","day","base","promVP","length","i","Math","round","console","log","extra","generateVD","aux","random","t","includes","push","dataDay","style","margin","Number","map","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.615e66a0.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react'\n\nfunction App() {\n\n  // variables\n  const [daysSimulation, setDaysSimulation] = useState(7); // Cantidad de dias simulados\n  // const [vpArray, setVpArray] = useState([]); // Array con las ventas pérdidas\n  const [arrayData, setArrayData] = useState([])\n  const [repositionMon, setRepositionMon] = useState(40)\n  const [repositionThrSat, setRepositionThrSat] = useState(30)\n\n  const [dataResult, setDataResult] = useState(null)\n\n  let auxArray = []\n  \n  // Inicialización de variables\n\n  let d = 0 // día de la semana, va de 1 a 7\n\n  let vpl = 3 // Venc. pan del lunes\n  let vpj = 7 // Venc. pan del jueves\n  let vps = 10 // Venc. pan del sábado\n\n  let pl = 0 // pan del lunes\n  let pj = 0 // pan del jueves\n  let ps = 0 // pan del sábado\n\n  let pvl = 0 // pan vendido desde el lunes\n  let pvj = 0 // pan vendido desde el jueves\n  let pvs = 0 // pan vendido desde el sábado\n\n  let cbp = 0 // costo de búsqueda de pan\n  let ccp = 0 // costo de compra de pan\n\n  const α1 = 650  // Gasto fijo por buscar pan (Gasoil)\n  const α2 = 68   // Costo de kg de pan\n  const α3 = 60   // Costo de pérdida de pan\n\n  let ca = 0\n\n  let vpArray = [] // Array con las ventas pérdidas\n\n  let vd = 0 // Venta diaria\n  let pv = 0 // Pan vendido\n  let cvp = 0 // Costo de venta pérdida\n  let vp = 0 // Venta pérdida\n  \n\n  let ctcp = 40 * α2 // Costo total de compra de pan\n  let tcvp = 0 // Total de costo de venta pérdido\n  let tpvp = 0 // Total KG pan de venta pérdido\n  \n\n  let st = 40\n\n  const dp = [1, 4, 6]\n\n  const daysOfWeek = {\n    1: \"Lunes\",\n    2: \"Martes\",\n    3: \"Miércoles\",\n    4: \"Jueves\",\n    5: \"Viernes\",\n    6: \"Sábado\",\n    0: \"Domingo\"\n  }\n\n  function getDataSimulation() {\n    function generateCA(day) {\n    \n      let promVP = 0\n      if (vpArray.length) {\n        for (let i = 0; i < vpArray.length; i++) {\n          promVP += vpArray[i]\n        }\n    \n        promVP = Math.round(promVP/vpArray.length)\n        console.log(`El promedio de ventas perdidas es de ${promVP}`)\n      }\n  \n      let base\n      day === 1? base = repositionMon : base = repositionThrSat\n  \n      let extra = Math.round(promVP/2) - st\n      \n\n      if (base + extra > 0) {\n        return base + extra\n      } else {\n        return 0\n      }\n\n    }\n\n    function generateVD() {\n      let aux = Math.random()\n  \n      if (aux >= 0 && aux < 0.054) return 11\n      if (aux >= 0.054 && aux < 0.14) return 12\n      if (aux >= 0.14 && aux < 0.249) return 13\n      if (aux >= 0.249 && aux < 0.412) return 14\n      if (aux >= 0.412 && aux < 0.564) return 15\n      if (aux >= 0.564 && aux < 0.738) return 16\n      if (aux >= 0.738 && aux < 0.858) return 17\n      if (aux >= 0.858 && aux < 0.923) return 18\n      if (aux >= 0.923 && aux < 0.977) return 19\n      if (aux >= 0.977 && aux < 1) return 20\n    }\n\n\n\n    \n    // Paso 1 (T = T + 1)\n    for (let t = 1; t <= daysSimulation; t++) {\n      console.log(`ESTE ES EL ARREGLO DE VENTAS PERDIDAS`, vpArray);\n\n      // Paso 2 (D = D + 1)\n      d++\n\n      console.log(`Hoy es día ${t} ${daysOfWeek[d]}`)\n\n      // Paso 3 (Ver si es el día que vence alguna compra de pan)\n      switch (t) {\n        case vpl:\n          console.log(\"Vencío tu pan del lunes\")\n          // Paso 3.1 -- Ver si el pan vendido desde el lunes es mayor o igual a la cantidad adquirida el lunes\n          if (!pvl >= pl) { \n            // Paso 3.1.1 -- Restar el pan vencido de la compra del lunes al stock actual\n            st = st - ( pl - pvl > 0? pl - pvl : 0 )\n          }\n        break;\n        case vpj:\n          console.log(\"Vencío tu pan del jueves\")\n          // Paso 3.2 -- Ver si el pan vendido desde el jueves es mayor o igual a la cantidad adquirida el jueves\n          if (!pvj >= pj) { \n            // Paso 3.2.1 -- Restar el pan vencido de la compra del lunes al stock actual\n            st = st - (pj - pvj > 0? pj - pvj : 0)\n          }\n          \n        break;\n        case vps:\n          console.log(\"Vencío tu pan del sábado\")\n          // Paso 3.3 -- Ver si el pan vendido desde el sábado es mayor o igual a la cantidad adquirida el sábado\n          if (!pvs >= ps) { \n            // Paso 3.3.1 -- Restar el pan vencido de la compra del sábado al stock actual\n            st = st - (ps - pvs > 0? ps - pvs : 0)\n          }\n        break;\n\n        default:\n        break;\n      }\n\n      // Paso 4 (DP includes D)\n      if (dp.includes(d)) {\n        console.log(\"Hoy se compra paaaaaaaaaaan\")\n\n        // Paso 5 (Generar CA)\n        ca = generateCA(d)\n\n        console.log(\"CA GENERADOOOOOOO\", ca);\n        if (ca > 0) {\n          // Paso x (Calcula el total de buscar el producto)\n          cbp = cbp + α1\n\n          // Paso x (Calcula el costo de la compra actual)\n          ccp = ca*α2\n\n          // Paso x (Acumulamos el costo total de compra de pan)\n          ctcp += ccp\n\n        }\n\n        // Paso 6 -- Ver que día de compra es\n        switch (d) {\n          // lunes\n          case 1:\n            // Paso 6.1.1\n            vpl = t + 3\n            // Paso 6.1.2\n            pl = ca\n            // Paso 6.1.3\n            pvl = 0\n            // Paso 6.1.4\n            st = st + pl\n\n          break;\n          // jueves\n          case 4:\n            // Paso 6.2.1\n            vpj = t + 3\n            // Paso 6.2.2\n            pj = ca\n            // Paso 6.2.3\n            pvj = 0\n            // Paso 6.2.4\n            st = st + pj\n            \n          break;\n          // sabado\n          case 6:\n            // Paso 6.3.1\n            vps = t + 3\n            // Paso 6.3.2\n            ps = ca\n            // Paso 6.3.3\n            pvs = 0\n            // Paso 6.3.4\n            st = st + ps\n\n          break;\n        \n          default:\n          break;\n        }\n\n\n      }\n\n\n\n\n      // Paso 9 (Generar la venta diaria)\n      vd = generateVD()\n      console.log(`hoy se vendió ${vd} Kg de pan`);\n\n      // Paso 10 (Comprobar si la venta diaria es menor al stock)\n      if (vd <= st) {\n        // Paso 10.1.1 (Al stock le resto el pan vendido)\n        st -= vd\n\n        // Paso 10.1.2 (Al pan vendido le sumo la venta diaria)\n        pv += vd\n      } else {\n        // Paso 10.2.1 (guardamos el valor de la venta perdida en nuestro array)\n        vp = vd - st\n        console.log(\"st: \", st);\n        vpArray.push(vp)\n\n        // Paso 10.2.2 (Calcular el costo de venta pérdido)\n        cvp += vp * α3\n\n        // Paso 10.2.3 (Vendemos el pan que nos queda)\n        pv += st\n\n        // Paso 10.2.4 (Vaciamos el stock)\n        st = 0\n\n        // TOTAL DE VENTAS PERDIDAS EN KG\n        tpvp += vp\n\n        // Paso x (Acumulamos el total de costo de venta perdido)\n        tcvp += cvp\n      }\n\n      // // Paso 12 (Acumulamos el total de pan vendido)\n      // tpv += pv\n\n\n\n      // Paso 14 (Acumulamos la cantidad de pan vendido desde el lunes)\n      pvl += pv\n\n      // Paso 15 (Acumulamos la cantidad de pan vendido desde el jueves)\n      pvj += pv\n\n      // Paso 16 (Acumulamos la cantidad de pan vendido desde el sábado)\n      pvs += pv\n      \n      // Paso 17 (Reiniciar la semana si cabe)\n      if (d >= 7) {\n        d = 0\n      }\n\n      \n\n      \n      const dataDay = {\n        t: t,\n        day: daysOfWeek[d],\n        vd: vd,\n        vpl: vpl,\n        vpj: vpj,\n        vps: vps,\n        vpArray: vpArray,\n        ca: ca,\n        st: st,\n        pl: pl,\n        pj: pj,\n        ps: ps,\n      }\n\n      auxArray.push(dataDay)\n      \n      console.log('--------------------------------')\n      console.log('vpArray', vpArray)\n      console.log('--------------------------------')\n\n    }\n\n\n    // Final step (Show results)\n    console.log(`El costo total de compra de pan es: $${ctcp}`)\n    console.log(`El total de pan vendido es: ${pv} Kg`)\n    console.log(`El total de pan perdido es: ${tpvp} Kg`)\n    console.log(`El costo total de venta pérdida es: $${tcvp}`)\n    console.log(`El costo de búsqueda total: $${cbp}`)\n\n    const dataResult = {\n      ctcp: ctcp,\n      pv: pv,\n      tpvp: tpvp,\n      tcvp: tcvp,\n      cbp: cbp,\n    }\n    setDataResult(dataResult)\n\n    setArrayData(auxArray)\n  }\n\n\n  // t va a ser manejado por el ciclo for\n\n\n  return (\n    <div className=\"App\">\n      <h1>TPI2 - Simulación</h1>\n      <input type=\"number\" value={daysSimulation} onChange={(e) => setDaysSimulation(e.target.value)} min=\"1\"/>\n    \n\n      <input type=\"button\" value=\"Realizar simulación\" onClick={ getDataSimulation } />\n\n      <div style={{margin:\"1rem\"}}>\n        <div>\n          <span style={{ margin: \"0 1rem\" }}>Pan a reponer los Lunes</span>\n          <input type=\"number\" onChange={(e) => setRepositionMon(Number(e.target.value))} value={repositionMon} />\n        </div>\n        <div>\n          <span style={{ margin: \"0 1rem\" }}>Pan a reponer los Jueves y Sábados</span>\n          <input type=\"number\" onChange={(e) => setRepositionThrSat(Number(e.target.value))} value={repositionThrSat} />\n        </div>\n      </div>\n\n\n      <div className=\"result-container\">\n        {dataResult? \n          <>\n          <div>\n            <div><b>Resultados</b></div>\n            <div>El costo total de compra de pan: {dataResult.ctcp}</div>\n            <div>Total de pan vendido: {dataResult.pv}</div>\n            <div>Total de pan perdido: {dataResult.tpvp}</div>\n            <div>Costo total de venta pérdida: {dataResult.tcvp}</div>\n            <div>Costo de búsqueda total : {dataResult.cbp}</div>\n          </div>\n\n\n            <table style={{ margin:\"1rem auto\" }}>\n              <thead>\n                <tr>\n                  <th>Día nro</th>\n                  <th>Día de la semana</th>\n                  <th>Venta Diaria</th>\n                  <th>Pan Lunes</th>\n                  <th>Vto. pan Lunes</th>\n                  <th>Pan Jueves</th>\n                  <th>Vto. pan Jueves</th>\n                  <th>Pan Sábado</th>\n                  <th>Vto. pan Sábado</th>\n                  <th>Stock/Final día</th>\n                  <th>Pan comprado hoy</th>\n                </tr>\n              </thead>\n              <tbody>\n                { arrayData.length?\n                  \n                  arrayData.map((el,i) => {\n                    return <tr key={i}>\n                            <td>{el.t}</td>\n                            <td>{el.day}</td>\n                            <td>{el.vd}</td>\n                            <td>{el.pl}</td>\n                            <td>{el.vpl}</td>\n                            <td>{el.pj}</td>\n                            <td>{el.vpj}</td>\n                            <td>{el.ps}</td>\n                            <td>{el.vps}</td>\n                            <td>{el.st}</td>\n                            <td>{el.ca}</td>\n                          </tr>\n                  })\n                  : \n                  <></>\n                }\n              </tbody>\n            </table>\n          </>\n          \n          :\n          <></>\n        }\n      </div>\n\n        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}